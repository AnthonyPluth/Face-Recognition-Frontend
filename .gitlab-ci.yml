stages:
  - install
  - build
  - test
  - deploy

image: cypress/browsers:node12.18.0-chrome83-ff77

cache:
  key: global_face_rec
  untracked: true
  paths:
    - node_modules/
    - cache/Cypress

variables:
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

###############################################################################

install:
  stage: install
  script:
    - npm ci
    
###############################################################################

build:
  stage: build
  dependencies:
    - install
  script:
    - npm run build
  artifacts:
    paths:
      - build
    expire_in: 60 mins
    
###############################################################################

test:
  stage: test
  dependencies:
    - install
  image: cypress/browsers:node12.18.0-chrome83-ff77
  script:
    - npm run cypress:verify
    - NODE_ENV=test npm run test_gitlab
    - npm run coverage
  artifacts:
    when: always
    paths:
      - cypress/videos/*.mp4
      - cypress/screenshots/*.png
      - coverage/
    expire_in: 10 days

###############################################################################

pages:
  stage: deploy
  only:
    - master
  dependencies:
    - test
  script:
    - rm -rf public/*
    - cp -r coverage/* public/
  artifacts:
    paths:
      - public
    expire_in: 30 days

deploy-nginx:
  image: docker:19.03.11
  stage: deploy
  only:
    - master
  dependencies:
    - build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script: 
    - npm run build
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/nginx:latest --tag $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE/nginx:latest .
    - docker push $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/nginx:latest

###############################################################################
