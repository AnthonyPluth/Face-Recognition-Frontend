include:
  - template: Secret-Detection.gitlab-ci.yml

stages:
  - secret_detection
  - install
  - build
  - test
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - node_modules/
    - cache/Cypress/

services:
  - docker:19.03.11-dind

variables:
  CYPRESS_CACHE_FOLDER: "cache/Cypress"
  DOCKER_TLS_CERTDIR: "/certs"

###############################################################################

secret_detection:
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: "true"

###############################################################################

install:
  stage: install
  image: node:latest
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/

###############################################################################

build:
  stage: build
  needs: ["install"]
  image: node:latest
  script:
    - npm run build
  artifacts:
    paths:
      - build
    expire_in: 60 mins

###############################################################################

test:
  stage: test
  image: cypress/browsers:node12.18.0-chrome83-ff77
  script:
    - npm install cypress
    - npm run cypress:verify
    - NODE_ENV=test npm run test_gitlab
    - npm run coverage
  artifacts:
    when: always
    paths:
      - cypress/videos/*.mp4
      - cypress/screenshots/*.png
      - coverage/
    expire_in: 10 days

###############################################################################

pages:
  stage: deploy
  # only:
  #   - master
  dependencies:
    - test
  script:
    - rm -rf public/*
    - cp -r coverage/* public/
  artifacts:
    paths:
      - public
    expire_in: 30 days

###############################################################################

deploy-nginx:
  image: docker:19.03.11
  stage: deploy
  # only:
  #   - master
  dependencies:
    - build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_SHA" -f "Dockerfile" .
    - docker tag "$REGISTRY_URL/nginx:$CI_COMMIT_SHA" "$REGISTRY_URL/nginx:latest"
    - docker push $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/nginx:latest

###############################################################################
