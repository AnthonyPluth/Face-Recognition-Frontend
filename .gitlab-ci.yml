include:
  - template: Secret-Detection.gitlab-ci.yml

stages:
  - install
  - build
  - test
  - deploy

cache:
  key: shared-cache
  paths:
    - node_modules/
    - cache/Cypress/

secret_detection:
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: "true"

services:
  - docker:19.03.11-dind

variables:
  CYPRESS_CACHE_FOLDER: "cache/Cypress"
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

###############################################################################

install:
  stage: install
  image: node:latest
  script:
    - yarn install
  # only:
  #   changes:
  #     - package-lock.json

###############################################################################

build:
  stage: build
  image: node:latest
  script:
    - yarn run build
  artifacts:
    paths:
      - build
    expire_in: 60 mins

###############################################################################

test:
  stage: test
  image: cypress/browsers:node12.18.0-chrome83-ff77
  script:
    - yarn install cypress
    - yarn cypress:verify
    - NODE_ENV=test yarn test_gitlab
    - yarn coverage
  artifacts:
    when: always
    paths:
      - cypress/videos/*.mp4
      - cypress/screenshots/*.png
      - coverage/
    expire_in: 10 days

###############################################################################

pages:
  stage: deploy
  # only:
  #   - master
  dependencies:
    - test
  script:
    - rm -rf public/*
    - cp -r coverage/* public/
  artifacts:
    paths:
      - public
    expire_in: 30 days

###############################################################################

deploy-nginx:
  image: docker:19.03.11
  stage: deploy
  # only:
  #   - master
  dependencies:
    - build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/nginx:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/nginx:latest --tag $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE/nginx:latest .
    - docker push $CI_REGISTRY_IMAGE/nginx:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/nginx:latest

###############################################################################
